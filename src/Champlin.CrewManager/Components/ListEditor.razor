@using System.Collections.Generic
@using MatBlazor

<MatExpansionPanel>
    <MatExpansionPanelSummary>
        <MatExpansionPanelHeader>@Name</MatExpansionPanelHeader>
    </MatExpansionPanelSummary>
    <MatExpansionPanelDetails>
        @if(ItemList != null && ItemList.Count > 0)
        {
        <MatList>
            @foreach (var item in ItemList)
            {
            <MatListItem>@item  <MatIconButton Icon="remove" OnClick="@(e => {ItemList.Remove(item);})"></MatIconButton></MatListItem>
            }
        </MatList>
        }
        <p><MatTextField @bind-Value="@tempItem"></MatTextField><MatButton OnClick="@(e => {addItem(tempItem);})">Add</MatButton></p>
    </MatExpansionPanelDetails>
</MatExpansionPanel>

@code {

    [Parameter]
    public List<string> ItemList {get; set;}
    [Parameter]
    public EventCallback<List<string>> ItemListChanged {get; set;}
    [Parameter]
    public string Name { get; set; }
    private string tempItem;

    private async Task addItem(string item)
    {
        if (ItemList == null)
        {
            ItemList = new List<string>();
        }
        ItemList.Add(item);

        await ItemListChanged.InvokeAsync(ItemList);
    }

    private async Task removeItem(string item)
    {
        ItemList.Remove(item);
        await ItemListChanged.InvokeAsync(ItemList);
    }
}